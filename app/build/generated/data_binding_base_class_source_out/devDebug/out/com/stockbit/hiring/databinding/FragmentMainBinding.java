// Generated by view binder compiler. Do not edit!
package com.stockbit.hiring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.stockbit.hiring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final MaterialToolbar mainToolbar;

  @NonNull
  public final FragmentContainerView navHostContainer;

  private FragmentMainBinding(@NonNull LinearLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull MaterialToolbar mainToolbar,
      @NonNull FragmentContainerView navHostContainer) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.mainToolbar = mainToolbar;
    this.navHostContainer = navHostContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = rootView.findViewById(id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.mainToolbar;
      MaterialToolbar mainToolbar = rootView.findViewById(id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.navHostContainer;
      FragmentContainerView navHostContainer = rootView.findViewById(id);
      if (navHostContainer == null) {
        break missingId;
      }

      return new FragmentMainBinding((LinearLayout) rootView, bottomNavigation, mainToolbar,
          navHostContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
