// Generated by Dagger (https://dagger.dev).
package com.stockbit.hiring.data.di;

import com.stockbit.hiring.data.remote.api.ExampleServiceCallback;
import com.stockbit.hiring.data.repository.ExampleRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideExampleepositoryFactory implements Factory<ExampleRepository> {
  private final Provider<ExampleServiceCallback> provideDefaultApiCallbackProvider;

  public ApplicationModule_ProvideExampleepositoryFactory(
      Provider<ExampleServiceCallback> provideDefaultApiCallbackProvider) {
    this.provideDefaultApiCallbackProvider = provideDefaultApiCallbackProvider;
  }

  @Override
  public ExampleRepository get() {
    return provideExampleepository(provideDefaultApiCallbackProvider.get());
  }

  public static ApplicationModule_ProvideExampleepositoryFactory create(
      Provider<ExampleServiceCallback> provideDefaultApiCallbackProvider) {
    return new ApplicationModule_ProvideExampleepositoryFactory(provideDefaultApiCallbackProvider);
  }

  public static ExampleRepository provideExampleepository(
      ExampleServiceCallback provideDefaultApiCallback) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.INSTANCE.provideExampleepository(provideDefaultApiCallback));
  }
}
