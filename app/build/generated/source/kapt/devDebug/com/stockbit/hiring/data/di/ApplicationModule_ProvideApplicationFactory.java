// Generated by Dagger (https://dagger.dev).
package com.stockbit.hiring.data.di;

import android.app.Application;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideApplicationFactory implements Factory<Context> {
  private final Provider<Application> applicationProvider;

  public ApplicationModule_ProvideApplicationFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return provideApplication(applicationProvider.get());
  }

  public static ApplicationModule_ProvideApplicationFactory create(
      Provider<Application> applicationProvider) {
    return new ApplicationModule_ProvideApplicationFactory(applicationProvider);
  }

  public static Context provideApplication(Application application) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.INSTANCE.provideApplication(application));
  }
}
