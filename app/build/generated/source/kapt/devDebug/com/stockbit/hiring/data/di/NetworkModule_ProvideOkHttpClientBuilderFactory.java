// Generated by Dagger (https://dagger.dev).
package com.stockbit.hiring.data.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideOkHttpClientBuilderFactory implements Factory<OkHttpClient.Builder> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideOkHttpClientBuilderFactory(
      Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public OkHttpClient.Builder get() {
    return provideOkHttpClientBuilder(okHttpClientProvider.get());
  }

  public static NetworkModule_ProvideOkHttpClientBuilderFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideOkHttpClientBuilderFactory(okHttpClientProvider);
  }

  public static OkHttpClient.Builder provideOkHttpClientBuilder(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideOkHttpClientBuilder(okHttpClient));
  }
}
